@model ActivityViewModel
<header>
    <nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light border-bottom box-shadow mb-4">
        <div class="container">
            <a class="navbar-brand" asp-area="" asp-controller="Home" asp-action="Index">
                <h1>EventApp</h1>
            </a>
            <button class="navbar-toggler" type="button" data-toggle="collapse" data-target=".navbar-collapse"
                aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="navbar-collapse collapse">
                <ul class="navbar-nav flex-grow-1 justify-right flex-row-reverse">
                    <li class="nav-item mr-2 ml-5">
                        <a class="nav-link text-dark" asp-area="" asp-controller="Home" asp-action="LogOut"><u
                                class="text-primary">Logout</u></a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link text-dark" asp-area="" asp-controller="Home" asp-action="Dashboard"><u
                                class="text-primary">Home</u></a>
                    </li>
                </ul>
            </div>
        </div>
    </nav>
</header>
<div class="ml-5 text-left">
    <h1 class="d-inline-block">@Model.viewActivityModel.Title</h1>
    @foreach(ActivityModel act in Model.viewActivityList)
    {
    @if(Model.viewSessionId == act.UserId)
    {
    <a style="width:20%;box-shadow:2px 2px 2px 2px black;" class="float-right btn btn-primary"
        href="/ActivityDelete/@act.ActivityId">Delete</a>
    }

    else if(act.Joins.All(j => j.UserId != Model.viewSessionId) == true){
    <a style="width:20%;box-shadow:2px 2px 2px 2px black;" class="float-right btn btn-primary"
        href="/Join/@act.ActivityId">Join</a>
    }
    else{
    <a style="width:20%;box-shadow:2px 2px 2px 2px black;" class="float-right btn btn-primary"
        href="/Leave/@act.ActivityId">Leave</a>
    }
    <h5>@Model.viewActivityModel.Date.ToString("MM/dd/yy") at @Model.viewActivityModel.TimeHour:@Model.viewActivityModel.TimeMin  @Model.viewActivityModel.AMPM</h5>
    <h5>@Model.viewActivityModel.Address</h5>
    <h3 class="mt-4 ml-5">Event Coordinator: @act.Creator.Name</h3>
    <h3 class="ml-5 mt-4">Description:</h3>
    <div class="pl-4 mt-3 mb-5">
        <p class="ml-5">@act.Description</p>
    </div>
    <h3>Participants:</h3>
    <div class="pl-4 mt-3 mb-5">
        <ul class="ml-5">
            @foreach(Join j in @act.Joins){
            <li>@j.User.Name</li>
            }

        </ul>
    </div>
    }


</div>

<script>
    var map;
    var service;
    var infowindow;

    function initMap() {
      var sydney = new google.maps.LatLng(40, -95.7);

      infowindow = new google.maps.InfoWindow();

      map = new google.maps.Map(
          document.getElementById('mapDisplay'), {center: sydney, zoom: 17});

      var request = {
        query: '@Model.viewActivityModel.Address',
        fields: ['name', 'geometry'],
      };

      service = new google.maps.places.PlacesService(map);

      service.findPlaceFromQuery(request, function(results, status) {
        if (status === google.maps.places.PlacesServiceStatus.OK) {
          for (var i = 0; i < results.length; i++) {
            createMarker(results[i]);
          }

          map.setCenter(results[0].geometry.location);
        }
      });
    }

    function createMarker(place) {
      var marker = new google.maps.Marker({
        map: map,
        position: place.geometry.location
      });

      google.maps.event.addListener(marker, 'click', function() {
        infowindow.setContent(place.name);
        infowindow.open(map, this);
      });
    }
  </script>

<div class="col-md-5 col-sm-12 nonBlock">
    <h4>Directions:</h4>
    <div id="mapDisplay"></div>
</div>
<div class="col-md-6 col-sm-12 rightSide text-left">
    <h4>Group Chat:</h4>
    <div id="activityChat">
        <div id="usersList" class="overflow-auto messageFlex">
            @foreach (Message m in @Model.viewMessageList)
            {
                <div class="flexContainer">
                    
                    <span class="chatMessage"><span style="font-weight: bold; font-style: oblique; ">@m.Creator.Name:</span> @m.MessageBody</span>
                    <span class="messageDetail">- @m.CreatedAt</span>
                </div>
            }
        </div>
        <div class="messageForm">
            <form id="messageForm" autocomplete="off">
                <input class="messageInput" id="messageInput" placeholder="Message here..." required>
                <input type="hidden" id="hiddenUser" value="@Model.viewSessionUserName">
                <button class="btn btn-primary btn-sm" id="sendButton">Send</button>
            </form>
        </div>
    </div>
</div>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAEQidesVmbzzyHL2723Cb7tKKVhRha8cY&libraries=places&callback=initMap" async defer></script>
<script src="~/lib/signalr/dist/browser/signalr.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.24.0/moment.min.js"></script>
<script src="~/js/chat.js"></script>